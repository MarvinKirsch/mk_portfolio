name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main

jobs:
  checkout_code:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  authenticate:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    needs: checkout_code
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/${{ secrets.GCP_PROJECT_ID }}/locations/global/workloadIdentityPools/${{ secrets.GCP_POOL_NAME }}/providers/${{ secrets.GCP_PROVIDER_NAME }}
          service_account: ${{ secrets.GCP_SERVICE_EMAIL }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

  setup_gcloud:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    needs: authenticate
    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    needs: setup_gcloud
    steps:
      - name: Authorize Docker push to Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_GAR_LOCATION }}
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.GCP_GAR_LOCATION }}:${{ github.sha }} .
          docker push ${{ secrets.GCP_GAR_LOCATION }}:${{ github.sha }}

  deploy_to_cloud_run:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    needs: build_and_push
    steps:
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ secrets.GCP_SERVICE }}
          region: ${{ secrets.GCP_REGION }}
          # Use appropriate GCR location or Artifact Registry reference based on setup
          image: ${{ secrets.GCP_PROJECT_ID }}-${{ secrets.GCP_SERVICE }}:${{ github.sha }}
      - name: Show output
        run: echo ${{ steps.deploy.outputs.url }}
